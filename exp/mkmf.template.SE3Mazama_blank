# MiMA template for the Intel fortran compiler version 8
# Platform: Stanford Earth, Mazama HPC (copied from .nyu template)
#
# TODO: use nf-config (fortran) and nc-config (c) to get the netcdf configurations for compilation aka,:
# can we get the MPI flags from a config?
# FFLAGS = ${DEBUG} `nf-config --fflags` `nc-config --fflags` -I${MPI_DIR}/include
#
# yoder:
# variables we will need:
# NOTES: Windows uses INCLUDE; *nix uses: CPATH (C/C++), C_INCLUDE_PATH (C),
#   and/or CPLUS_INCLUDE_PATH. usually just CPATH.
# NETCDF_INC set by module script (as well as _DIR, _LIB, _BIN variables.)
# INCLUDE, PATH, and LD_LIBRARY_PATH vars are also prepended in module libs.
#
# typical use with mkmf
# mkmf -t template.ifc -c"-Duse_libMPI -Duse_netCDF" path_names /usr/local/include
#
# Compilers:
# (use system definitions -- set by module script, except LD)
#
#DEBUG=-g -traceback -debug full
#
#

##OPT = -O2 -xSSE4.2 -axAVX
#OPT = -O2
##OPT = -O1
##OPT = -O0

#FFLAGS = ${DEBUG} ${OPT} -heap-arrays -fpp -stack_temps -safe_cray_ptr -ftz -assume byterecl -i4 -r8 -g ${MIMA_CONFIG_FFLAGS}
# -check all
#
# yoder:
# if necessary, include ${MPI_INC} or ${MPI_DIR}/include, etc. semi-manually. openmpi3 gives some additional C or F flags via pkg-congig,
#   but pkg-config calls are not universal for the MPIs.
#CPPFLAGS = ${MIMA_CONFIG_CFLAGS}
#
#LDFLAGS = -shared-intel ${MIMA_CONFIG_LDFLAGS}

$(info ** ** Template Variables: )
$(info ** ** LDFLAGS: ${LDFLAGS})
$(info ** ** FFLAGS: ${FFLAGS})
$(info ** ** CPPFLAGS: ${CPPFLAGS})
$(info ** ** MIMA_FFLAGS: ${MIMA_CONFIG_FFLAGS})
$(info ** ** MIMA_FFLAGS parens: $(MIMA_CONFIG_FFLAGS))
$(info ** ** MIMA_LDFLAGS: ${MIMA_CONFIG_LDFLAGS})

#
#$(info Compilers:)
#$(info CC: ${CC})
#$(info FC: ${FC})
#

#CFLAGS = -D__IFC

