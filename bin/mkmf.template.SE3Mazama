# MiMA template for the Intel fortran compiler version 8
# Platform: Stanford Earth, Mazama HPC (copied from .nyu template)
#
# TODO: use nf-config (fortran) and nc-config (c) to get the netcdf configurations for compilation aka,:
# can we get the MPI flags from a config?
# FFLAGS = ${DEBUG} `nf-config --fflags` `nc-config --fflags` -I${MPI_DIR}/include
#
# TODO: does this get executed like a script (probably as a csh script), or is it just a template? aka, do the "export" variable definition
#  lines actually execute (so they should probably be setenv, or are they just interpreted by a calling program?)
#
# yoder:
# variables we will need:
# NOTES: Windows uses INCLUDE; *nix uses: CPATH (C/C++), C_INCLUDE_PATH (C),
#   and/or CPLUS_INCLUDE_PATH. usually just CPATH.
# NETCDF_INC set by module script (as well as _DIR, _LIB, _BIN variables.)
# INCLUDE, PATH, and LD_LIBRARY_PATH vars are also prepended in module libs.
#NETCDF_INC=
# _LIB is set, but the way everybody else uses it:

LIB_NETCDF=${NETCDF_LIB}
#MVAPICH2_INC=${MPI_DIR}/include
CPATH=${INCLUDE}:${MPI_DIR}/include:CPATH
DEBUG=-g -traceback -debug full -O2
#
# yoder:
#
# note that our NetCDF-c and NetCDF-fortran paths are separate.
# it is possible that NetCDF things can get confused if thety expect NetCDF-C
#   and NetCDF-Fortran components to be in the same place. appending to PATH,
#   INCLUDE/CPATH, and LD_LIBRARY_PATH should handle those problems. Otherwise,
#   add NETCDF_DIR, NETCDF_FORTRAN_LIB, NETCDF_FORTRAN_INC (set in the
#   netcdf-fortran module script) as needed.
#
# typical use with mkmf
# mkmf -t template.ifc -c"-Duse_libMPI -Duse_netCDF" path_names /usr/local/include
# yoder:
FFLAGS = ${DEBUG} -heap-arrays -fpp -stack_temps -safe_cray_ptr -ftz -assume byterecl -i4 -r8 -g ${MIMA_CONFIG_FFLAGS}
# -check all
#FFLAGS = ${DEBUG}  -fpp -stack_temps -safe_cray_ptr -ftz -assume byterecl -i4 -r8 ${MIMA_CONFIG_FFLAGS}
#
#FFLAGS = ${DEBUG} -fpp -stack_temps -safe_cray_ptr -ftz -assume byterecl -i4 -r8 -g -I${NETCDF_INC} -I${NETCDF_FORTRAN_INC} -I${MPI_DIR}/include -I${HDF5_INC}
#FFLAGS = ${DEBUG} -fpp -stack_temps -safe_cray_ptr -ftz -i-dynamic -assume byterecl -i4 -r8 -g -I${NETCDF_INC} -I${MVAPICH2_INC}
#
#FFLAGS = ${DEBUG} -stack_temps -safe_cray_ptr -ftz -i_dynamic -assume byterecl -O3 -axAVX -xSSE2 -ipo -i4 -r8 -g ${INC_NETCDF} -I${MVAPICH2_INC}
#FFLAGS = ${DEBUG} -stack_temps -safe_cray_ptr -ftz -i_dynamic -assume byterecl -O0 -i4 -r8 -g -I${NETCDF_INC} -I${MVAPICH2_INC}
OPT = -O2 -xSSE4.2 -axAVX
OPT = -O2
#OPT = -O1 
#OPT = -O0

FFLAGS += ${OPT}
#
# yoder:
# TODO: move these nc/pkg-config sub-scripts up and export into variables, so the following line(s) are not
#  changed; all the changing happens up top (so like MPI_CFLAGS=`pkg-config --cflags ompi` )
CPPFLAGS=-I/usr/include -I/usr/local/include ${MIMA_CONFIG_CFLAGS}

#CPPFLAGS=-I/usr/include -I/usr/local/include `nc-config --cflags` `nf-config --cflags `pkg-config --cflags ompi` `pkg-config --cflags ompi-fort` -I${HDF5_INC}

#CPPFLAGS =  -I/usr/include -I/usr/local/include -I${NETCDF_INC} -I${MPI_DIR}/include #-I/usr/mpi/intel/mvapich-1.1.0/include
#CPPFLAGS =  -I/usr/include -I/usr/local/include -I${NETCDF_INC}  -I${MVAPICH2_INC} #-I/usr/mpi/intel/mvapich-1.1.0/include

#FC = mpif90
#LD = mpif90
FC=ifort
LD=ifort
CC=icc
#
MPIFC=mpiifort
MPILD=mpiifort
MPICC=mpiicc
MPICXX=mpiicc


#LDFLAGS = -shared-intel -L/usr/local/lib -L${LIB_NETCDF}
# yoder:
#LDFLAGS = -shared-intel -L/usr/local/lib -L${NETCDF_LIB} -L${NETCDF_FORTRAN_LIB} -L${MPI_DIR}/lib -L${HDF5_DIR}/lib -lnetcdf -lnetcdff -lmpi_usempif08 -lmpi_usempi_ignore_tkr  -lmpi_mpifh -lmpi
#LDFLAGS = -shared-intel -L/usr/local/lib  -L/opt/ohpc/pub/libs/intel/openmpi3/netcdf-fortran/4.5.2/lib -lnetcdff  -L/opt/ohpc/pub/libs/intel/openmpi3/hdf5/1.10.5/lib  -L/opt/ohpc/pub/libs/intel/openmpi3/netcdf/4.7.1/lib -lnetcdf -lnetcdf -lm -Wl,-rpath -Wl,/opt/ohpc/pub/mpi/openmpi3-intel/3.1.4/lib -Wl,--enable-new-dtags  -L/opt/ohpc/pub/mpi/openmpi3-intel/3.1.4/lib -lmpi_usempif08 -lmpi_usempi_ignore_tkr  -lmpi_mpifh -lmpi
#
# from Sherlock:
# LDFLAGS = -shared-intel -L/usr/local/lib -L${NETCDF_DIR}/lib -L${NETCDF_FORTRAN_DIR}/lib -L${HDF5_DIR}/lib -L${MPI_DIR}/lib -lnetcdf -lnetcdff -lmpifort
LDFLAGS = -shared-intel -L/usr/local/lib  -L/opt/ohpc/pub/libs/intel/openmpi3/netcdf-fortran/4.5.2/lib -L/opt/ohpc/pub/libs/intel/openmpi3/hdf5/1.10.5/lib  -L/opt/ohpc/pub/libs/intel/openmpi3/netcdf/4.7.1/lib -L/opt/ohpc/pub/mpi/openmpi3-intel/3.1.4/lib -Wl,-rpath -Wl,/opt/ohpc/pub/mpi/openmpi3-intel/3.1.4/lib -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi  -lnetcdf -lnetcdff -lm
#
# something in this breaks (getting an error like, "variable name must start with a letter"). we need a simpler string. the above appears to work.
#   generally, efforts for a comprehensive, semi-automated approach to construct the -L, -I tags from *-config calls probably 1) is overkill anyway, and
#   2) breaks mkmf. One approach that might work is to do the same basic construction of MIMA_CONFIG_LDFLAGS, but use the L-only and l-only options.

#
CFLAGS = -D__IFC
